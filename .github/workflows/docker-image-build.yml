name: Build and Publish Multi-Arch Docker Image

on:
  push:
    branches:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Read version from file
        id: version
        run: |
          VERSION=$(cat hyperswitch-web/gitVersion)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if Docker image tag exists on GHCR (via tags/list)
        id: check_tag
        shell: bash
        run: |
          IMAGE_NAME="centerionware/hyperswitch-web-autobuild/hyperswitch-web"
          TAG="v${{ steps.version.outputs.VERSION }}-helm"

          echo "Checking if tag '$TAG' exists for image '$IMAGE_NAME'..."

          # Get a short-lived pull token from GHCR
          TOKEN=$(curl -s \
            "https://ghcr.io/token?scope=repository:${IMAGE_NAME}:pull" \
            -u ${{ github.actor }}:${{ secrets.GHCR_TOKEN }} \
            | jq -r '.token')

          # Fetch the list of tags
          TAGS=$(curl -s -H "Authorization: Bearer ${TOKEN}" \
            "https://ghcr.io/v2/${IMAGE_NAME}/tags/list" | jq -r '.tags[]')

          if echo "$TAGS" | grep -q "^${TAG}$"; then
            echo "Tag '$TAG' exists. Skipping build."
            echo "skip_build=false" >> $GITHUB_ENV
          else
            echo "Tag '$TAG' not found. Proceeding with build."
            echo "skip_build=false" >> $GITHUB_ENV
          fi


      - name: Clone hyperswitch-web repo at version branch
        if: env.skip_build == 'false'
        run: |
          git clone --branch "v${{ steps.version.outputs.VERSION }}" https://github.com/juspay/hyperswitch-web.git other-repo

      - name: Replace sdkVersion ARG in Dockerfile
        if: env.skip_build == 'false'
        run: |
          sed -i 's/^ARG sdkVersion$/ARG sdkVersion=${{ steps.version.outputs.VERSION }}/' other-repo/Dockerfile.helm
          echo "Updated line:"
          grep '^ARG sdkVersion=' other-repo/Dockerfile.helm

      - name: Set up Docker Buildx
        if: env.skip_build == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        if: env.skip_build == 'false'
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push multi-arch Docker image
        if: env.skip_build == 'false'
        run: |
          IMAGE_TAG=ghcr.io/centerionware/hyperswitch-web-autobuild/hyperswitch-web:v${{ steps.version.outputs.VERSION }}-helm

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file other-repo/Dockerfile.helm \
            --push \
            --tag $IMAGE_TAG \
            other-repo
